{"version":3,"sources":["utils/utils.jsx","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["getTabById","tab","selectedId","find","id","Tabs","tabs","selectedTabId","onTabSelected","selectedTab","className","map","title","isTabSelected","cn","href","onClick","content","App","useState","setSelectedTabId","preparedTab","ReactDOM","render","document","getElementById"],"mappings":"uNAEaA,EAAa,SAACC,EAAKC,GAAN,OACxBD,EAAIE,MAAK,qBAAGC,KAAgBF,MAAeD,EAAI,I,OCApCI,EAAO,SAAC,GAId,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcT,EAAWM,EAAMC,GAErC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKG,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAACV,GACT,IAAQG,EAAcH,EAAdG,GAAIQ,EAAUX,EAAVW,MACNC,EAAgBJ,EAAYL,KAAOA,EAEzC,OACE,oBACEM,UAAWI,IAAG,CACZ,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMX,GACV,UAAQ,UACRY,QAAS,kBAAOH,GAAiBL,EAAcP,IAHjD,SAKGW,KAPER,UAef,qBAAKM,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYQ,cCjCRX,EAAO,CAClB,CAAEF,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASb,EAAK,GAAGF,IAA3D,mBAAOG,EAAP,KAAsBa,EAAtB,KACMC,EAAcrB,EAAWM,EAAMC,GAGrC,OACE,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYT,SAGlC,cAAC,EAAD,CACEN,KAAMA,EACNC,cAAeA,EACfC,cAXgB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,GAAH,OAAYgB,EAAiBhB,UCbrDkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2a4d01d6.chunk.js","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n\r\nexport const getTabById = (tab, selectedId) => (\r\n  tab.find(({ id }) => id === selectedId) || tab[0]\r\n);\r\n","import cn from 'classnames';\nimport { getTabById } from '../../utils';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = getTabById(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n            const isTabSelected = selectedTab.id === id;\n\n            return (\n              <li\n                className={cn({\n                  'is-active': isTabSelected,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => !isTabSelected && onTabSelected(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { getTabById } from './utils';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const preparedTab = getTabById(tabs, selectedTabId);\n  const onTabSelected = ({ id }) => setSelectedTabId(id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${preparedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}